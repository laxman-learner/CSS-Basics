body {
  font-family: sans-serif;
  letter-spacing: 1px;
  color: green;
}
div {
  height: 100px;
  width: 150px;
  margin: 20px;
  padding: 15px;

  border: 2px solid green;
  background-color: lightblue;
  color: green;
}
.div1 {
  position: static;
  top: 20px;
  left: 30px;
  bottom: 40px;
  right: 45px;
  /* HTML elements are positioned static by default.
    Static positioned elements are not affected by the top, bottom, left, and right properties.
    An element with position: static; is not positioned in any special way; 
    it is always positioned according to the normal flow of the page: */
}
.div2 {
  position: relative;
  left: 200px;
  bottom: 30px;

  /* An element with position: relative; is positioned relative to its normal position. 
  Setting the top, right, bottom, and left properties of a relatively-positioned element 
  will cause it to be adjusted away from its normal position. 
  Other content will not be adjusted to fit into any gap left by the element.*/
}
.div3 {
  position: absolute;
  right: 100px;
  top: 50px;
  /* An element with position: absolute; is positioned relative to the nearest positioned
   ancestor   (instead of positioned relative to the viewport, like fixed).
    However; if an absolute positioned element has no positioned ancestors, it uses the
    document body, and moves along with page scrolling. */
}

.div4 {
  position: fixed;
  bottom: 100px;
  right: 50px;
  /* An element with position: fixed; is positioned relative to the viewport, which means it always stays in the same place even
   if the page is scrolled. */
}
.div5 {
  position: sticky;
  top: 200px;
  left: 400px;
  /* A sticky element toggles between relative and fixed, depending on the scroll position. 
  It is positioned relative until a given offset position is met in the viewport - 
  then it "sticks" in place (like position:fixed). */
}
